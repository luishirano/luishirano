package com.avatar.maintenance.service.impl;

import java.net.URL;
import java.util.Arrays;
import java.util.Properties;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.avatar.maintenance.dto.Person;
import com.avatar.maintenance.repository.PersonRepository;
import com.avatar.maintenance.service.PersonService;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonParser;

@Service("personService")
public class PersonServiceImpl implements PersonService{

	@Autowired
	PersonRepository pRepository;
	
	@Override
	public void save(Person person) {
		RestTemplate restTemplate = new RestTemplate();
		
		 RestTemplate rt = new RestTemplate();
	        HttpHeaders headers = new HttpHeaders();
	        headers.setAccept(Arrays.asList(MediaType.APPLICATION_JSON));
	        headers.add("user-agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.99 Safari/537.36");
	        HttpEntity<String> entity = new HttpEntity<String>("parameters", headers);
	        String url = "https://swapi.co/api/planets/";
	        ResponseEntity<String> res = rt.exchange(url, HttpMethod.GET, entity, String.class);
	        String data = res.toString();
	        JsonParser parser = new JsonParser();
	        JsonArray gsonArr = parser.parse(data).getAsJsonArray();
	        
	        URL url2 = new  URL("https://swapi.co/api/planets?q=java&type=get");
	        try (InputStream is = url.openStream();
	             JsonReader rdr = Json.createReader(is)) {
	             JsonObject obj = rdr.readObject();
	             JsonArray results = obj.getJsonArray("data");
	             for (JsonObject result : results.getValuesAs(JsonObject.class)) {
	                 System.out.print(result.getJsonObject("from").getString("name"));
	                 System.out.print(": ");
	                 System.out.println(result.getString("message", ""));
	                 System.out.println("-----------");
	             }
	        }
	       
		pRepository.save(person);
	
	}
}
